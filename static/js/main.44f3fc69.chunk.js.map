{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","isReversed","reverse","e","currentTarget","classList","toggle","setState","sortByLength","sortByAlphabet","resetButton","this","visibleGoods","sort","good1","good2","localeCompare","length","isStartArray","toString","buttonReset","type","className","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,iFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWE,IAAME,EAAb,4MACEC,MAAQ,CACNC,SAAU,EACVC,YAAY,GAHhB,EAMEC,QAAU,SAACC,GACTA,EAAEC,cAAcC,UAAUC,OAAO,YACjC,EAAKC,UAAS,SAAAR,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBATzB,EAaEO,aAAe,WACb,EAAKD,SAAS,CAAEP,SAAU,KAd9B,EAiBES,eAAiB,WACf,EAAKF,SAAS,CAAEP,SAAU,KAlB9B,EAqBEU,YAAc,WACZ,EAAKH,SAAS,CAAEP,SAAU,EAAGC,YAAY,KAtB7C,4CAyBE,WACE,MAAiCU,KAAKZ,MAA9BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WACZW,EAAY,UAAOf,GAEzBe,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQf,GACN,KAAK,EACH,OAAOc,EAAME,cAAcD,GAC7B,KAAK,EACH,OAAOD,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAIThB,GACFW,EAAaV,UAGf,IAAMgB,EACFrB,EAAgBsB,aAAeP,EAAaO,WAE1CC,EACJ,wBACEC,KAAK,SACLC,UAAU,4BACVC,QAASZ,KAAKD,YAHhB,mBASF,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACED,KAAK,SACLC,UAAS,yBAA4C,IAAxBX,KAAKZ,MAAMC,SAAiB,GAAK,YAC9DuB,QAASZ,KAAKF,eAHhB,iCAQA,wBACEY,KAAK,SACLC,UAAS,4BAA+C,IAAxBX,KAAKZ,MAAMC,SAAiB,GAAK,YACjEuB,QAASZ,KAAKH,aAHhB,4BAQA,wBACEa,KAAK,SACLC,UAAS,4BAAuBX,KAAKZ,MAAME,WAAa,GAAK,YAC7DsB,QAASZ,KAAKT,QAHhB,qBAQEgB,EAAe,GAAKE,KAIxB,6BACE,6BACGR,EAAaY,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,iBA3FvB,GAAyBC,IAAMC,WCzB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.44f3fc69.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype State = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    sortType: 0,\n    isReversed: false,\n  };\n\n  reverse = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.currentTarget.classList.toggle('is-light');\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: 2 });\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: 1 });\n  };\n\n  resetButton = () => {\n    this.setState({ sortType: 0, isReversed: false });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const visibleGoods = [...goodsFromServer];\n\n    visibleGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case 1:\n          return good1.localeCompare(good2);\n        case 2:\n          return good1.length - good2.length;\n        default:\n          return 1;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    const isStartArray\n      = goodsFromServer.toString() === visibleGoods.toString();\n\n    const buttonReset = (\n      <button\n        type=\"button\"\n        className=\"button is-danger is-light\"\n        onClick={this.resetButton}\n      >\n        Reset\n      </button>\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${this.state.sortType === 1 ? '' : 'is-light'}`}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${this.state.sortType === 2 ? '' : 'is-light'}`}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${this.state.isReversed ? '' : 'is-light'}`}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          { isStartArray ? '' : buttonReset}\n\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(good => (\n              <li key={good} data-cy=\"Good\">\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}